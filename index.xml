<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recent posts</title><link>https://blog.johnnovak.net/</link><description>Recent content on Recent posts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 15 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.johnnovak.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Achieving period-correct graphics in personal computer emulators --- Part 1: The Amiga</title><link>https://blog.johnnovak.net/achieving-period-correct-graphics-in-personal-computer-emulators-part-1-the-amiga/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/achieving-period-correct-graphics-in-personal-computer-emulators-part-1-the-amiga/</guid><description>UPDATE 2022-11-20: Shader pack updated to v2, changed the instructions and screenshots accordingly, plus revised the whole article here and there a bit. Note that the names of the shader files have changed.
This is a significant update that incorporates Guest&amp;rsquo;s recent shader improvements, achieves better preservation of highlights, more contrast, sharpness &amp;amp; vividness, and subtler glow and halation. Enjoy! ðŸ˜Ž Table of contents Preamble The Amiga Single vs double-scan Why bother?</description></item><item><title>Smooth video playback with subtitles on Raspberry PI 4</title><link>https://blog.johnnovak.net/2021/05/31/smooth-video-playback-with-subtitles-on-raspberry-pi-4/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2021/05/31/smooth-video-playback-with-subtitles-on-raspberry-pi-4/</guid><description>Table of contents Introduction The failed attempts VLC OMXPlayer mpv Kodi The solution &amp;mdash; LibreELEC Configuration tweaks Keyboard bindings Selecting the correct HDMI output range Some weird issues Hardware setup In conclusion Introduction A few weeks ago I decided it was time to replace my ageing 2007 Macbook Pro I had been using for watching movies on my big living room TV with something newer. Something that can play H.264 videos without the fan going into overdrive, and H.</description></item><item><title>Nim Apocrypha, Vol. I</title><link>https://blog.johnnovak.net/nim-apocrypha-vol-i/</link><pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/nim-apocrypha-vol-i/</guid><description>Table of contents Intro I &amp;mdash; The Not-So-Obvious 1 Reducing executable size by stripping debug symbols 2 Release builds with exception logging 3 Switching to ARC/ORC 4 Executable icons on Windows (MinGW) 5 Debug echo in Windows GUI programs (MinGW) II &amp;mdash; The Hidden 6 &amp;lsquo;using&amp;rsquo; keyword 7 Opening URLs in the default browser 8 Cross-platform home and config directories 9 Debug dumping expressions 10 Measuring elapsed time 11 Dealing with openarrays III &amp;mdash; The Crafty 12 Easy pointer manipulations 13 Taming circular type dependencies 14 &amp;lsquo;with&amp;rsquo; macro 15 Aliases IV &amp;mdash; The Grand Finale 16 Saving memory by object field reordering Outro Intro Greetings fellow Nim adventurers!</description></item><item><title>Raspbian Stretch home server setup</title><link>https://blog.johnnovak.net/2019/03/09/raspbian-stretch-home-server-setup/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2019/03/09/raspbian-stretch-home-server-setup/</guid><description>UPDATE 2019-10-19: Added some warnings about the default exFAT cluster sizes.
UPDATE 2019-07-08: Added instructions on enabling exFAT support, made the fstab mounting command more robust, and added the Fixing boot problems due to bad fstab file section.
Table of contents Introduction Installing Raspbian Scratch Enabling SSH access Enabling VNC access Mounting an NTFS or exFAT formatted external USB HDD Setting up an FTP server Setting up Deluge Installing the Debian Jessie version Configuring the Deluge daemon for remote access Configuring the remote thin client Introduction Okay, so the Micro SD card in my trusty Raspberry Pi 2 torrent box home server finally bit the dust after three years of steady service, so I had to get a new one and reinstall everything from scratch (no pun intended), which I have documented in this post in detail.</description></item><item><title>Creating a Nim wrapper for FMOD</title><link>https://blog.johnnovak.net/2018/07/07/creating-a-nim-wrapper-for-fmod/</link><pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2018/07/07/creating-a-nim-wrapper-for-fmod/</guid><description>Table of contents Overview Prerequisites Auto-generating the basic wrapper Fixing conversion errors &amp;ndash; Part 1 Opaqueue C structs Circular types Unsigned integer literals Dynamic linking Fixing conversion errors &amp;mdash; Part 2 FMOD callbacks and function pointers Missing constants Error handling helpers Improving the wrapper Conclusion Further links of interest Overview One of the many attractive things about Nim is its ability to interface with C libraries relatively easily, be they either statically linked or dynamically loaded.</description></item><item><title>Ao resists the forces of darkness (pbrt meets Nim)</title><link>https://blog.johnnovak.net/2017/06/18/ao-resists-the-forces-of-darkness-pbrt-meets-nim/</link><pubDate>Sun, 18 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2017/06/18/ao-resists-the-forces-of-darkness-pbrt-meets-nim/</guid><description>Table of contents Overview Notes on the book Coordinate system Vectors, Normals, Points Matrix inverse Ray-box intersection tests Notes on Nim Project structure Inlining Calling parent methods Managing circular dependencies Conclusion Further links of interest Overview I started reading the awesome Physically Based Rendering: From Theory to Implementation book a few weeks ago, which made me realise that it&amp;rsquo;s probably for the best if I rewrote my ray tracer from the ground up based on the ideas presented in the book.</description></item><item><title>Nim performance tuning for the uninitiated</title><link>https://blog.johnnovak.net/2017/04/22/nim-performance-tuning-for-the-uninitiated/</link><pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2017/04/22/nim-performance-tuning-for-the-uninitiated/</guid><description>UPDATE 2017-06-04: Corrected some slight misinformation regarding link time optimisations and the {.inline.} pragma, some stylistic improvements, added more references.
Table of contents Overview First attempts Test setup Round 1 &amp;mdash; Nim vs C++ 0. C++ 1. Nim &amp;mdash; using GLM 2. Nim &amp;mdash; custom vector class (object refs) 3. Nim &amp;mdash; custom vector class (objects) 4. Nim &amp;mdash; vector module 5. Nim &amp;mdash; vector module (with inlines) Round 2 &amp;mdash; Nim vs Java, JavaScript &amp;amp; Python JIT warmup Conclusion Does it all matter?</description></item><item><title>A minimalist Openbox desktop for Vim freaks</title><link>https://blog.johnnovak.net/2016/11/13/a-minimalist-openbox-desktop-for-vim-freaks/</link><pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2016/11/13/a-minimalist-openbox-desktop-for-vim-freaks/</guid><description>Are you the sort of person who is looking for a Vim plugin for everything? Does having to reach out for the mouse sideways cause you involuntary facial muscles twitches? Is breaking out the arrow keys with a screwdriver among the first few things you do on a new computer (after swapping Caps Lock with Left Ctrl, of course)? Then welcome, you&amp;rsquo;re among friends here.
UPDATE 2020-05-11: Updated instructions for Crunchbang++ 10 (based on Debian 10).</description></item><item><title>The Nim Ray Tracer Project --- Part 4: Calculating box normals</title><link>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-4-calculating-box-normals/</link><pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-4-calculating-box-normals/</guid><description>[I&amp;rsquo;ve been listening to Shadows of the Heart from Dan Pound all week, it&amp;rsquo;s just the perfect definition of ambient that, according to Brian Eno, &amp;ldquo;must be as ignorable as it is interesting&amp;rdquo;. No track highlights this time, this is really meant to be listened to from beginning to end, over and over again; it&amp;rsquo;s one singular 55-minute piece of soothing ambient symphony!]
I needed a way to calculate normals for the box primitive in my ray tracer.</description></item><item><title>The Nim Ray Tracer Project --- Part 3: Lighting &amp; Vector Maths</title><link>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-3-lighting-vector-maths/</link><pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-3-lighting-vector-maths/</guid><description>[Listening Esoterica from Dan Pound. Very reminiscent of the Steve Roach type of tribal/electronic ambient, which is always a good thing in my book. Parts 1, 2, 6 &amp;amp; 7 are my personal highlights.]
Ok, so last time I ended my post with the cliffhanger that I&amp;rsquo;m going to show some actual Nim code in the next episode, which is this. Well, I&amp;rsquo;ll never make foolish promises like that again, I swear!</description></item><item><title>What every coder should know about gamma</title><link>https://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/</link><pubDate>Wed, 21 Sep 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/</guid><description>Table of contents A short quiz The arcane art of gamma-correctness What is gamma and why do we need it? Light emission vs perceptual brightness Physical vs perceptual linearity Efficient image encoding The gamma transfer function Gamma vs sRGB Gamma calibration Processing gamma-encoded images Effects of gamma-incorrectness Gradients Colour blending Alpha blending / compositing Image resizing Antialiasing Physically-based rendering Conclusion References &amp;amp; further reading General gamma/sRGB info Linear lighting &amp;amp; workflow (LWF) Bonus stuff A short quiz If you have ever written, or are planning to write, any kind of code that deals with image processing, you should complete the below quiz.</description></item><item><title>Cross-platform GUI Toolkit Trainwreck --- 2016 Edition</title><link>https://blog.johnnovak.net/cross-platform-gui-toolkit-trainwreck-2016-edition/</link><pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/cross-platform-gui-toolkit-trainwreck-2016-edition/</guid><description>Ok, I&amp;rsquo;m not too sure in what direction this post will go, an informative article, a rant, or both. Probably a bit of both, with an emphasis on the rant part, given my current not-quite-positive emotional involvement with the topic. Gentlemen (and gentlewomen), please fasten your seatbelts!
UPDATE #1: It turned out to be a quite informative mega-post in the end, just don&amp;rsquo;t give up reading after the first section&amp;hellip;</description></item><item><title>The Nim Ray Tracer Project --- Part 2: The Basics</title><link>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-2-the-basics/</link><pubDate>Sat, 30 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-2-the-basics/</guid><description>[I have to tell that even after 34 years, Brian Eno&amp;rsquo;s ambient music is still so much better than 99.9999% of all recent electronic releases. Listening to Ambient 4: On Land from 1982; track #2 The Lost Day has a wonderfully creepy atmosphere&amp;hellip;]
Table of contents The Basics Coordinate system Notation Transform matrices Calculating primary rays Ray-sphere intersection Ray-plane intersection In the next episode&amp;hellip; Suggested reading The Basics Hello again!</description></item><item><title>The Nim Ray Tracer Project --- Part 1: Introduction</title><link>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-1-introduction/</link><pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/the-nim-ray-tracer-project-part-1-introduction/</guid><description>[Listening to the albums Reverberant Skies and White Maps from Aglaia in an infinite loop&amp;hellip; A beautifully hypnotic experience! The track In the First Spinning Place from White Maps is my absolute favourite.]
Why a ray tracer? I&amp;rsquo;ve been fascinated by ray tracing since my childhood. I still remember the first time I was playing around with an early 3D modeller/ray tracer program on the Amiga 500 called Imagine when I was about 13, trying to render some extruded letters made of glass placed on a classic checker-board patterned surface (don&amp;rsquo;t laugh, this was sort of a novel thing to do at that time, and I was a kid).</description></item><item><title>The quest for a programming language that doesn't suck --- Part 1</title><link>https://blog.johnnovak.net/the-quest-for-a-programming-language-that-doesnt-suck-part-1/</link><pubDate>Thu, 03 Mar 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/the-quest-for-a-programming-language-that-doesnt-suck-part-1/</guid><description>[Listening to: Aglaia â€“ Three Organic Experiences. Track #3, Seven Ancient Glaciers is a definite stand-out!]
Welcome, stranger! This series is a journal that attempts to document my trials and tribulations as I embark on the impossible journey of finding the perfect programming language that I can use with great joy on my hobby projects. An epic quest of unfathomable difficulty, indeed!
In this episode: after a somewhat lacklustre introductory meandering on the merits of the multi-language approach in software development, things get heated up quite a bit with some good old-fashioned C++ bashing, after which the hero calms down and finally sets some GOALs.</description></item><item><title>The Beginning</title><link>https://blog.johnnovak.net/2016/02/21/the-beginning/</link><pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2016/02/21/the-beginning/</guid><description>Just what the world needs, yet another technical blog!
My name is John Novak and I&amp;rsquo;ve been working as a professional programmer ever since I left uni in 2003. In those last 12+ years I have worked in a variety of industries using lots of different programming languages, most notably C, C++, Java, Python, C#, JavaScript and PHP. I&amp;rsquo;ll spare you from the gory details, you can check out my LinkedIn profile if you&amp;rsquo;re really that interested.</description></item><item><title>About</title><link>https://blog.johnnovak.net/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/about/</guid><description>About Hey there, my name is John Novak and this is my personal blog where I keep a diary of my various misadventures that roughly fall into the &amp;ldquo;recreational programming&amp;rdquo; category. If you really need to further satisfy your curiosity about my person, try this post, or snoop around on my website.
Apart from coding, I also like to write music, mess around with 3D art, and do photography.</description></item></channel></rss>