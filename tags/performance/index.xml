<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>performance on Recent posts</title><link>http://blog.johnnovak.net/tags/performance/</link><description>Recent content in performance on Recent posts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Apr 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.johnnovak.net/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Nim performance tuning for the uninitiated</title><link>http://blog.johnnovak.net/2017/04/22/nim-performance-tuning-for-the-uninitiated/</link><pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate><guid>http://blog.johnnovak.net/2017/04/22/nim-performance-tuning-for-the-uninitiated/</guid><description>UPDATE 2017-06-04: Corrected some slight misinformation regarding link time optimisations and the {.inline.} pragma, some stylistic improvements, added more references.
Table of contents Overview First attempts Test setup Round 1 &amp;mdash; Nim vs C++ 0. C++ 1. Nim &amp;mdash; using GLM 2. Nim &amp;mdash; custom vector class (object refs) 3. Nim &amp;mdash; custom vector class (objects) 4. Nim &amp;mdash; vector module 5. Nim &amp;mdash; vector module (with inlines) Round 2 &amp;mdash; Nim vs Java, JavaScript &amp;amp; Python JIT warmup Conclusion Does it all matter?</description></item></channel></rss>