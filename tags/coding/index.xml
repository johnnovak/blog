<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coding on Recent posts</title><link>https://blog.johnnovak.net/tags/coding/</link><description>Recent content in coding on Recent posts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.johnnovak.net/tags/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Nim Apocrypha, Vol. I</title><link>https://blog.johnnovak.net/2020/12/21/nim-apocrypha-vol-i/</link><pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2020/12/21/nim-apocrypha-vol-i/</guid><description>Table of contents Intro I &amp;mdash; The Not-So-Obvious 1 Reducing executable size by stripping debug symbols 2 Release builds with exception logging 3 Switching to ARC/ORC 4 Executable icons on Windows (MinGW) 5 Debug echo in Windows GUI programs (MinGW) II &amp;mdash; The Hidden 6 &amp;lsquo;using&amp;rsquo; keyword 7 Opening URLs in the default browser 8 Cross-platform home and config directories 9 Debug dumping expressions 10 Measuring elapsed time 11 Dealing with openarrays III &amp;mdash; The Crafty 12 Easy pointer manipulations 13 Taming circular type dependencies 14 &amp;lsquo;with&amp;rsquo; macro 15 Aliases IV &amp;mdash; The Grand Finale 16 Saving memory by object field reordering Outro Intro Greetings fellow Nim adventurers!</description></item><item><title>Creating a Nim wrapper for FMOD</title><link>https://blog.johnnovak.net/2018/07/07/creating-a-nim-wrapper-for-fmod/</link><pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2018/07/07/creating-a-nim-wrapper-for-fmod/</guid><description>Table of contents Overview Prerequisites Auto-generating the basic wrapper Fixing conversion errors &amp;ndash; Part 1 Opaqueue C structs Circular types Unsigned integer literals Dynamic linking Fixing conversion errors &amp;mdash; Part 2 FMOD callbacks and function pointers Missing constants Error handling helpers Improving the wrapper Conclusion Further links of interest Overview One of the many attractive things about Nim is its ability to interface with C libraries relatively easily, be they either statically linked or dynamically loaded.</description></item><item><title>Nim performance tuning for the uninitiated</title><link>https://blog.johnnovak.net/2017/04/22/nim-performance-tuning-for-the-uninitiated/</link><pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2017/04/22/nim-performance-tuning-for-the-uninitiated/</guid><description>UPDATE 2017-06-04: Corrected some slight misinformation regarding link time optimisations and the {.inline.} pragma, some stylistic improvements, added more references.
Table of contents Overview First attempts Test setup Round 1 &amp;mdash; Nim vs C++ 0. C++ 1. Nim &amp;mdash; using GLM 2. Nim &amp;mdash; custom vector class (object refs) 3. Nim &amp;mdash; custom vector class (objects) 4. Nim &amp;mdash; vector module 5. Nim &amp;mdash; vector module (with inlines) Round 2 &amp;mdash; Nim vs Java, JavaScript &amp;amp; Python JIT warmup Conclusion Does it all matter?</description></item><item><title>Cross-platform GUI Toolkit Trainwreck --- 2016 Edition</title><link>https://blog.johnnovak.net/2016/05/29/cross-platform-gui-toolkit-trainwreck-2016-edition/</link><pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2016/05/29/cross-platform-gui-toolkit-trainwreck-2016-edition/</guid><description>Ok, I&amp;rsquo;m not too sure in what direction this post will go, an informative article, a rant, or both. Probably a bit of both, with an emphasis on the rant part, given my current not-quite-positive emotional involvement with the topic. Gentlemen (and gentlewomen), please fasten your seatbelts!
UPDATE #1: It turned out to be a quite informative mega-post in the end, just don&amp;rsquo;t give up reading after the first section&amp;hellip;</description></item></channel></rss>