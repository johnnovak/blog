<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pbrt on Recent posts</title><link>https://blog.johnnovak.net/tags/pbrt/</link><description>Recent content in pbrt on Recent posts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 18 Jun 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.johnnovak.net/tags/pbrt/index.xml" rel="self" type="application/rss+xml"/><item><title>Ao resists the forces of darkness (pbrt meets Nim)</title><link>https://blog.johnnovak.net/2017/06/18/ao-resists-the-forces-of-darkness-pbrt-meets-nim/</link><pubDate>Sun, 18 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2017/06/18/ao-resists-the-forces-of-darkness-pbrt-meets-nim/</guid><description>Table of contents Overview Notes on the book Coordinate system Vectors, Normals, Points Matrix inverse Ray-box intersection tests Notes on Nim Project structure Inlining Calling parent methods Managing circular dependencies Conclusion Further links of interest Overview I started reading the awesome Physically Based Rendering: From Theory to Implementation book a few weeks ago, which made me realise that it&amp;rsquo;s probably for the best if I rewrote my ray tracer from the ground up based on the ideas presented in the book.</description></item></channel></rss>