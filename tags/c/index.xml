<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c on Recent posts</title><link>https://blog.johnnovak.net/tags/c/</link><description>Recent content in c on Recent posts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.johnnovak.net/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a Nim wrapper for FMOD</title><link>https://blog.johnnovak.net/2018/07/07/creating-a-nim-wrapper-for-fmod/</link><pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.johnnovak.net/2018/07/07/creating-a-nim-wrapper-for-fmod/</guid><description>Table of contents Overview Prerequisites Auto-generating the basic wrapper Fixing conversion errors &amp;ndash; Part 1 Opaqueue C structs Circular types Unsigned integer literals Dynamic linking Fixing conversion errors &amp;mdash; Part 2 FMOD callbacks and function pointers Missing constants Error handling helpers Improving the wrapper Conclusion Further links of interest Overview One of the many attractive things about Nim is its ability to interface with C libraries relatively easily, be they either statically linked or dynamically loaded.</description></item></channel></rss>